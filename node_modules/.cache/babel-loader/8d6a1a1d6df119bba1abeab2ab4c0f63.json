{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moniv\\\\OneDrive\\\\Desktop\\\\finalFront3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst reducerFunction = (state, _ref) => {\n  let {\n    type\n  } = _ref;\n\n  switch (type) {\n    case 'DARK':\n      return {\n        bgFlag: \"LIGHT\",\n        bgColor: \"#393944\",\n        ftColor: \"#eee\"\n      };\n\n    case 'LIGHT':\n      return {\n        bgFlag: \"DARK\",\n        ftColor: \"#393944\",\n        bgColor: \"#eee\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = _ref2 => {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const initialState = '';\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n  const store = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      store\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useReducer","createContext","initialState","theme","data","ContextGlobal","reducerFunction","state","type","bgFlag","bgColor","ftColor","ContextProvider","children","dispatch","store"],"sources":["C:/Users/moniv/OneDrive/Desktop/finalFront3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nconst reducerFunction = (state, { type }) => {\r\n\r\n  switch(type){\r\n    case 'DARK':\r\n      return {\r\n        bgFlag: \"LIGHT\",\r\n        bgColor: \"#393944\",\r\n        ftColor: \"#eee\"\r\n      }\r\n      case 'LIGHT':\r\n        return{\r\n          bgFlag: \"DARK\",\r\n        ftColor: \"#393944\",\r\n        bgColor: \"#eee\"\r\n        }\r\n        default:\r\n          return state;\r\n  }\r\n\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const initialState = ''\r\n  const [ state, dispatch ] = useReducer(reducerFunction, initialState);\r\n\r\n  const store = {\r\n    state,\r\n    dispatch\r\n  }\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{store}}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      \r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;;AAEP,MAAMK,eAAe,GAAG,CAACC,KAAD,WAAqB;EAAA,IAAb;IAAEC;EAAF,CAAa;;EAE3C,QAAOA,IAAP;IACE,KAAK,MAAL;MACE,OAAO;QACLC,MAAM,EAAE,OADH;QAELC,OAAO,EAAE,SAFJ;QAGLC,OAAO,EAAE;MAHJ,CAAP;;IAKA,KAAK,OAAL;MACE,OAAM;QACJF,MAAM,EAAE,MADJ;QAENE,OAAO,EAAE,SAFH;QAGND,OAAO,EAAE;MAHH,CAAN;;IAKA;MACE,OAAOH,KAAP;EAdR;AAiBD,CAnBD;;AAqBA,OAAO,MAAMK,eAAe,GAAG,SAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAMX,YAAY,GAAG,EAArB;EACA,MAAM,CAAEK,KAAF,EAASO,QAAT,IAAsBd,UAAU,CAACM,eAAD,EAAkBJ,YAAlB,CAAtC;EAEA,MAAMa,KAAK,GAAG;IACZR,KADY;IAEZO;EAFY,CAAd;EAKA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACC;IAAD,CAA/B;IAAA,uBACE;MAAA,UACGF;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAnBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}