{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moniv\\\\OneDrive\\\\Desktop\\\\finalFront3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst reducerFunction = (state, _ref) => {\n  let {\n    type\n  } = _ref;\n\n  switch (type) {\n    case \"dark\":\n      return \"dark\";\n\n    case \"light\":\n      return \"light\";\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = _ref2 => {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const initialState = {\n    theme: ' light',\n    data: []\n  };\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n\n  const getData = () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => dispatch({\n      type\n    }));\n  };\n\n  const store = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      store\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["axios","useReducer","createContext","initialState","theme","data","ContextGlobal","reducerFunction","state","type","ContextProvider","children","dispatch","getData","get","then","res","store"],"sources":["C:/Users/moniv/OneDrive/Desktop/finalFront3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport const initialState = { theme: \"\", data: [] };\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nconst reducerFunction = (state, { type }) => {\r\n  switch (type) {\r\n    case \"dark\":\r\n      return \"dark\";\r\n    case \"light\":\r\n      return \"light\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const initialState = {theme: ' light', data: []};\r\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\r\n\r\n  const getData = () => {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => dispatch({type}));\r\n  }\r\n\r\n  const store = {\r\n    state,\r\n    dispatch,\r\n  };\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{ store }}>\r\n      <div>{children}</div>\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAT;EAAaC,IAAI,EAAE;AAAnB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;;AAEP,MAAMK,eAAe,GAAG,CAACC,KAAD,WAAqB;EAAA,IAAb;IAAEC;EAAF,CAAa;;EAC3C,QAAQA,IAAR;IACE,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,OAAL;MACE,OAAO,OAAP;;IACF;MACE,OAAOD,KAAP;EANJ;AAQD,CATD;;AAWA,OAAO,MAAME,eAAe,GAAG,SAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAMR,YAAY,GAAG;IAACC,KAAK,EAAE,QAAR;IAAkBC,IAAI,EAAE;EAAxB,CAArB;EACA,MAAM,CAACG,KAAD,EAAQI,QAAR,IAAoBX,UAAU,CAACM,eAAD,EAAkBJ,YAAlB,CAApC;;EAEA,MAAMU,OAAO,GAAG,MAAM;IACpBb,KAAK,CAACc,GAAN,CAAU,4CAAV,EACGC,IADH,CACSC,GAAD,IAASJ,QAAQ,CAAC;MAACH;IAAD,CAAD,CADzB;EAED,CAHD;;EAKA,MAAMQ,KAAK,GAAG;IACZT,KADY;IAEZI;EAFY,CAAd;EAKA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEK;IAAF,CAA/B;IAAA,uBACE;MAAA,UAAMN;IAAN;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}